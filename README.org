#+TITLE:     Literate programming avec Org mode
#+AUTHOR:    Fabrice Niessen
#+EMAIL:     booster.emacs@gmail.com
#+DESCRIPTION: Fichier de démo pour la conférence GUTenberg 2021
#+KEYWORDS:  gutenberg, emacs, org-mode, latex, booster
#+LANGUAGE:  fr
#+OPTIONS:   num:t toc:nil

#+LaTeX_CLASS: report
#+LaTeX_CLASS_OPTIONS: [french]
#+LaTeX_HEADER: \input{config-listings}

#+PROPERTY:  header-args :eval always
#+SETUPFILE: https://fniessen.github.io/org-html-themes/org/theme-readtheorg.setup

Pour information, ce document Org est disponible sur
https://github.com/fniessen/gutenberg.

*Org mode* est une « fonctionnalité » d'Emacs offrant (entre autres) une syntaxe
/plain text/ facile à utiliser pour exporter des documents en LaTeX, en HTML, en
documents LibreOffice -- et encore plein d'autres choses !

* Documentation logicielle (Org Babel)                        :noexport:ARCHIVE:

La « *programmation lettrée* » (ou /literate programming/, de Knuth) consiste
à écrire la documentation sur le code source (dans l'ordre requis par la
logique) en même temps et en un même lieu que le code.

#+begin_verse
Je crois que le temps est venu pour une amélioration significative de la
documentation des programmes, et que le meilleur moyen d'y arriver est de
considérer les programmes comme des oeuvres littéraires. D'où mon titre,
« programmation lettrée ».

Nous devons changer notre attitude traditionnelle envers la construction des
programmes : au lieu de considérer que notre tâche principale est de dire à un
ordinateur ce qu'il doit faire, appliquons-nous plutôt à expliquer à des êtres
humains ce que nous voulons que l'ordinateur fasse.

Celui qui pratique la programmation lettrée peut être vu comme un essayiste, qui
s'attache principalement à exposer son sujet dans un style visant
à l'excellence. Tel un auteur, il choisit , avec soin, le dictionnaire à la
main, les noms de ses variables et en explique la signification pour chacune
d'elles. Il cherche donc à obtenir un programme compréhensible parce que ses
concepts sont présentés dans le meilleur ordre possible.
#+end_verse

2 concepts sont à distinguer :

- Weave :: *Exporter* le fichier Org en entier comme documentation « tissée »,
  formatée pour l'homme (généralement en LaTeX ou en HTML)

- Tangle :: *Extraire* les blocs de code source et générer le code « entrelacé »,
  formaté pour la machine (pour compilation ou exécution ultérieure)

  Possibilité de changer l'ordre du code source, via l'argument Noweb.

** Exporter le fichier Org (= weave)

- Appeler le menu d'export avec ~C-c C-e~
- Répéter la dernière commande d'export avec ~C-u C-c C-e~

** Exporter les blocs de code LaTeX (= tangle)

*** Déclaration des blocs de code source

#+begin_src latex :exports code
% Document de classe report
\documentclass[french]{report}
\usepackage[T1]{fontenc}
\usepackage[utf8]{inputenc}
\usepackage{lmodern}
\usepackage[a4paper]{geometry}
\usepackage{babel}
\usepackage{hyperref}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Début du document
\begin{document}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Caractéristiques du document
%
\author{}
\title{}
\date{}
%
% Production du titre
\maketitle

% Un chapitre
\chapter{}
#+end_src

Notez que, pour déclarer le titre du document, l'on utilise la syntaxe
~\title{...}~ où les =...= sont l'intitulé du chapitre.

*** Extraction des blocs de code source

Générer le code « entrelacé » :

#+begin_src latex :tangle exemple.tex :exports code :noweb yes
#+end_src

* Exécution de code                                           :noexport:ARCHIVE:

Voici un bout de code Python (~plus-2-fois-2~) qui ajoute 2, puis multiplie par 2;
d'où son nom :

#+name: plus-2-fois-2
#+begin_src python :var x=13 :exports both
resultat = x + 2
resultat = resultat * 2
return resultat
#+end_src

Voici bout de code Emacs Lisp (~fois-3~) qui multiplie par 3, et dont seul le
résultat m'intéresse :

#+name: fois-3
#+begin_src emacs-lisp :exports results :var x=plus-2-fois-2
(* 3 x)
#+end_src

Ensuite, voici un bout de code en LaTeX qui génère différents résultats, pour
quelques valeurs possibles de la variable ~x~ passées à ~plus-2-fois-2~ :

#+begin_src latex :exports both :noweb yes
\begin{itemize}
\item <<plus-2-fois-2(x=10)>>
\item <<plus-2-fois-2(x=20)>>
\item <<plus-2-fois-2(x=30)>>
\end{itemize}
#+end_src

Et, finalement, un graphique produit en langage R.

#+begin_src R :results output graphics file :file testout.png :eval yes
plot(1:10, (1:10)^2)
#+end_src

* Introduction

Excogitatum est super his, ut homines quidam ignoti, vilitate ipsa parum cavendi
ad colligendos rumores per Antiochiae latera cuncta destinarentur relaturi quae
audirent. hi peragranter et dissimulanter honoratorum circulis adsistendo
pervadendoque divites domus egentium habitu quicquid noscere poterant vel audire
latenter intromissi per posticas in regiam nuntiabant, id observantes
conspiratione concordi, ut fingerent quaedam et cognita duplicarent in peius,
laudes vero supprimerent Caesaris, quas invitis conpluribus formido malorum
inpendentium exprimebat.

* Équipements et tests

Post haec indumentum regale quaerebatur et ministris fucandae purpurae tortis
confessisque pectoralem tuniculam sine manicis textam, Maras nomine quidam
inductus est ut appellant Christiani diaconus.

** Équipements utilisés

Superatis Tauri montis verticibus qui ad solis ortum sublimius attolluntur,
Cilicia spatiis porrigitur late distentis dives bonis omnibus terra, eiusque
lateri dextro adnexa Isauria, pari sorte uberi palmite viget et frugibus
minutis, quam mediam navigabile flumen Calycadnus interscindit :

- ibi victu recreati et quiete,
- postquam abierat timor,
- vicos opulentos adorti equestrium adventu cohortium,
- quae casu propinquabant.

** Conditions de tests

Itaque tum Scaevola cum in eam ipsam mentionem incidisset, exposuit nobis
sermonem Laeli de amicitia habitum ab illo secum et cum altero genero, C. Fannio
Marci filio, paucis diebus post mortem Africani :

1. inter quos Paulus eminebat notarius ortus in Hispania,
2. glabro quidam sub vultu latens,
3. odorandi vias periculorum occultas perquam sagax.

* Résultats et discussion

Hae duae provinciae bello quondam piratico catervis mixtae praedonum a Servilio
pro consule missae sub iugum factae sunt vectigales.

#+name: mon-tableau
| Jour     | Frais |
|----------+-------|
| Lundi    |     8 |
| Mardi    |     5 |
| Mercredi |     2 |
| Jeudi    |     2 |
| Vendredi |     3 |
| Samedi   |     1 |
| Dimanche |     0 |
|----------+-------|
| Total    |    21 |
#+TBLFM: @>$2=vsum(@I..@-I)

Quid?

** Résultats

Coactique aliquotiens nostri pedites ad eos persequendos scandere clivos
sublimes etiam si lapsantibus plantis fruticeta prensando vel dumos ad vertices
venerint summos.

** Discussion

Sed tamen haec cum ita tutius observentur, quidam vigore artuum inminuto rogati
ad nuptias ubi aurum dextris manibus cavatis offertur, inpigre vel usque
Spoletium pergunt.

* Conclusions

Inter haec Orfitus praefecti potestate regebat urbem aeternam ultra modum
delatae dignitatis sese efferens insolenter, vir quidem prudens et forensium
negotiorum oppido gnarus, sed splendore liberalium doctrinarum minus quam
nobilem decuerat institutus, quo administrante seditiones sunt concitatae graves
ob inopiam vini:

| /Sous-total/    |        21.00 | \EUR |
|---------------+--------------+---|
| /Taxe @ 20%/    |         4.41 | \EUR |
|---------------+--------------+---|
| *Montant total* | *\large 25.41* | *\EUR* |
#+TBLFM: @1$2=vsum(remote(mon-tableau,@>$>));%.2f::@2$2=@1*0.21;%.2f::@3$2=vsum(@1..@-1);*\large %.2f*

Huius avidis usibus vulgus intentum ad motus asperos excitatur et crebros.

* Annexes

** Code Emacs Lisp

Code utilisé pour améliorer le rendu de la démonstration :

#+begin_src emacs-lisp :exports code
(set-frame-font "Consolas-13" nil t)
#+end_src

#+begin_src emacs-lisp :exports code
(setq org-latex-default-packages-alist
      '(("AUTO" "inputenc" t
         ("pdflatex"))
        ("T1" "fontenc" t
         ("pdflatex"))
        ("" "graphicx" t)
        ("" "xcolor")
        ("" "babel")
        ("" "listings")
        ("" "hyperref" nil)))

(setq org-latex-packages-alist nil)
#+end_src

#+begin_src emacs-lisp :exports code
(setq org-latex-text-markup-alist '((bold . "\\textbf{%s}")
                                    (code . "\\lstinline|%s|")
                                    (italic . "\\emph{%s}")
                                    (strike-through . "\\sout{%s}")
                                    (underline . "\\uline{%s}")
                                    (verbatim . "\\verb|%s|")))

(setq org-latex-classes

      '(("article" "\\documentclass[11pt]{article}"
         ("\\section{%s}" . "\\section*{%s}")
         ("\\subsection{%s}" . "\\subsection*{%s}")
         ("\\subsubsection{%s}" . "\\subsubsection*{%s}")
         ("\\paragraph{%s}" . "\\paragraph*{%s}")
         ("\\subparagraph{%s}" . "\\subparagraph*{%s}"))

        ("report" "\\documentclass[11pt]{report}"
         ("\\chapter{%s}" . "\\chapter*{%s}")
         ("\\section{%s}" . "\\section*{%s}")
         ("\\subsection{%s}" . "\\subsection*{%s}")
         ("\\subsubsection{%s}" . "\\subsubsection*{%s}")
         ("\\paragraph{%s}" . "\\paragraph*{%s}"))

        ("book" "\\documentclass[11pt]{book}"
         ("\\chapter{%s}" . "\\chapter*{%s}")
         ("\\section{%s}" . "\\section*{%s}")
         ("\\subsection{%s}" . "\\subsection*{%s}")
         ("\\subsubsection{%s}" . "\\subsubsection*{%s}")
         ("\\paragraph{%s}" . "\\paragraph*{%s}"))))
#+end_src

#+begin_src emacs-lisp :exports code
;; Export source code using `listings' (instead of `verbatim').
(setq org-latex-listings t)
#+end_src

** Plus d'informations

- Fichier d'exemple de la syntaxe Org mode :
  https://github.com/fniessen/org-html-themes/tests/org-mode-syntax-example.org

- Ma configuration Emacs :
  https://github.com/fniessen/emacs-leuven

- « Reference card » Org Babel :
  https://github.com/fniessen/refcard-org-babel

* Suis-moi !

- Rejoins le groupe Facebook \\
  et la communauté des « *Boosters Emacs* » ici : \\
  https://www.facebook.com/groups/286810496172489

- Abonne-toi à la chaîne Youtube « *Booster Emacs* » \\
  https://www.youtube.com/channel/UChSzlv1RJWFbb7XkV7OREtA?sub_confirmation=1 \\
  et active les notifications en cliquant sur la petite cloche pour ne rien
  rater !

# This is for the sake of Emacs.
# Local Variables:
# org-latex-listings: t
# eval: (set-frame-font "Consolas-13" nil t)
# End:
